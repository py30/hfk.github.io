WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.560
到目前为止 你已经学到了很多 Python 知识

00:00:02.560 --> 00:00:05.679
你知道如何表示数字和文本数据 你知道

00:00:05.679 --> 00:00:09.529
如何用列表、集合和字典来存储数据集

00:00:09.529 --> 00:00:13.059
是的 你收集了一组处理数据的工具

00:00:13.060 --> 00:00:15.160
你可以使用 Python 的内置方法和函数

00:00:15.160 --> 00:00:18.160
你可以编写自己的函数

00:00:18.160 --> 00:00:22.780
你可以使用循环迭代 使用 if 和 else 进行条件选择

00:00:22.780 --> 00:00:26.476
使用这些工具 你可以解决大部分编程问题

00:00:26.475 --> 00:00:28.599
当然 Python 比我们目前所涉及的更庞大

00:00:28.600 --> 00:00:31.355
我们稍后会再讲解两个主题

00:00:31.355 --> 00:00:33.158
但是 现在是应用所学技能的时候了

00:00:33.158 --> 00:00:35.850
实践才可以提高你的编程技艺

00:00:35.850 --> 00:00:39.145
那就对了 编程可不仅仅是语法

00:00:39.145 --> 00:00:42.095
要解决问题 你需要先定义它

00:00:42.094 --> 00:00:44.320
例如 你需要考虑函数的输入

00:00:44.320 --> 00:00:47.560
以及你应该输出的结果

00:00:47.560 --> 00:00:49.570
一旦你想通了程序的目标

00:00:49.570 --> 00:00:53.679
你需要考虑如何将程序分解成较小的部分

00:00:53.679 --> 00:00:57.744
然后 你需要评估你的计划 以确保其可以解决初始的问题

00:00:57.744 --> 00:01:00.039
我经常发现 当我计划一个新的程序时

00:01:00.039 --> 00:01:02.875
我意识到该问题比我假设的要复杂得多

00:01:02.875 --> 00:01:06.689
编码前的规划 帮助我更好地理解问题

00:01:06.689 --> 00:01:09.870
开始编码时还要记住一些其他事项

00:01:09.870 --> 00:01:12.189
你要写一些测试用例 以便你

00:01:12.189 --> 00:01:15.034
可以检查你的代码是否做了它应该做的事情

00:01:15.034 --> 00:01:17.468
你还需要使你的代码可读

00:01:17.468 --> 00:01:21.089
如果你的代码特别复杂 以至于你只能

00:01:21.090 --> 00:01:24.460
在你写的时候理解它 那么以后就不可能还能读懂

00:01:24.459 --> 00:01:26.954
在我们继续讨论下一个主题之前

00:01:26.954 --> 00:01:29.920
会有一个实验室让你练习这些技能

00:01:29.920 --> 00:01:31.587
祝你好运 当你实验的时候

00:01:31.587 --> 00:01:33.895
记得将问题分解成小块、

00:01:33.894 --> 00:01:38.000
计划 并注重可读性 稍后再见

