WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.860
当我接触一个新的库的时候

00:00:01.860 --> 00:00:04.294
我喜欢先在交互式 shell 中间尝试一下

00:00:04.294 --> 00:00:07.529
这是熟悉这个库的方法和语法最有效的方式

00:00:07.530 --> 00:00:09.539
在我的 terminal旁边 我打开了 BeautifulSoup 的文档

00:00:09.539 --> 00:00:12.660
以便在我尝试例子的时候来作参考

00:00:12.660 --> 00:00:16.289
文档有一个简单方便的快速起步指导 我们可以跟着来做

00:00:16.289 --> 00:00:20.189
先来打开一个 Python 编译器 然后导入 BeautifulSoup

00:00:20.190 --> 00:00:22.850
文档提示我们这样导入此库

00:00:22.850 --> 00:00:26.385
"here from bs4 import BeautifulSoup"

00:00:26.385 --> 00:00:30.670
接下来 文档展示了如何从字符串创建一个 soup 对象

00:00:30.670 --> 00:00:34.515
快速起步指导使用了一个短小的 html 字符串来展示

00:00:34.515 --> 00:00:37.250
我认为当我自己并不严格遵循所有指示的时候 我能学到更多

00:00:37.250 --> 00:00:41.969
所以我决定用 Wikipedia 的 html 来创建一个 soup 对象

00:00:41.969 --> 00:00:46.289
Charlie 已经向我们展示了如何用 requests 拿到一个 html 字符串 我也在这里照着做

00:00:46.289 --> 00:00:50.509
我先得到 Wikipedia 主页的 html 文档 然后在叫 html 的变量里面存储它

00:00:50.509 --> 00:00:53.504
我们先确认我们得到了 html 源码

00:00:53.505 --> 00:00:56.265
哇 这是很大篇幅的 html 源码

00:00:56.265 --> 00:01:00.099
现在 让我们根据文档的提示 用它来创建一个 soup 对象

00:01:00.098 --> 00:01:08.750
快速起步指导建议我们这样来取得一个 html 中的 tag

00:01:08.909 --> 00:01:12.094
嗯 是可以做到的

00:01:12.094 --> 00:01:14.929
好的 我们先来获取一个 &lt;p&gt; 标签

00:01:14.930 --> 00:01:19.498
文档上说我们可以用 soup.p

00:01:19.498 --> 00:01:22.484
可以 我们再次获得了一堆 html 源码

00:01:22.483 --> 00:01:24.554
好在篇幅只是一个段落

00:01:24.555 --> 00:01:29.030
我要在我的浏览器打开 Wikipedia 以便对比获得的源码和浏览器展示的内容

00:01:29.030 --> 00:01:31.670
这些内容看上去是今日特色条目关于 Frost's bolete 的内容

00:01:31.670 --> 00:01:36.200
它是一种真菌 并且正是我们 BeautifulSoup 里面的内容 真棒

00:01:36.200 --> 00:01:40.999
如果你想要页面里面第一个段落的代码 我们使用 soup.p

00:01:40.998 --> 00:01:45.622
我们还可以得到嵌套在内的 tag 比如 soup.p.a

00:01:45.623 --> 00:01:50.469
这样我们选择了第一个 &lt;p&gt; 标签中的第一个 &lt;a&gt; 标签

00:01:50.469 --> 00:01:53.420
这时 它指的是特色条目

00:01:53.420 --> 00:01:55.519
快速起步指导剩下的部分展示了

00:01:55.519 --> 00:01:58.189
如何以列表的形式获得标签而不仅仅是获得一个标签

00:01:58.189 --> 00:02:01.459
现在轮到你安装 BeautifulSoup 打开官方文档

00:02:01.459 --> 00:02:03.140
然后自己试试看

