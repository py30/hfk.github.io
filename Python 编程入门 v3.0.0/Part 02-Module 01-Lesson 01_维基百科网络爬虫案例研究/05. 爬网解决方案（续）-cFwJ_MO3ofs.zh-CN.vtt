WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.540
这段代码的功能是辨别在

00:00:03.540 --> 00:00:07.030
各种不同情况下 程序会停止请求 Wikipedia 的原因

00:00:07.030 --> 00:00:12.970
这儿有一个有 print 命令和 return 命令的 if 或者 elif 语句 

00:00:12.970 --> 00:00:16.260
如果没有符合的情形 我们返回 True

00:00:16.260 --> 00:00:19.950
这是我写的代码 不过这不是唯一正确的写法

00:00:19.949 --> 00:00:22.734
你的回答可能有所不同 不过没有关系

00:00:22.734 --> 00:00:25.879
代码有个地方我想可以做下改进

00:00:25.879 --> 00:00:31.079
这里 我在 if 语句中写道 25 步作为循环上限 

00:00:31.079 --> 00:00:35.049
如果未来我想改变这个上限

00:00:35.049 --> 00:00:39.634
我不得不找到这一行代码然后再手动填写其他值

00:00:39.634 --> 00:00:42.640
这种数字被人们叫做魔术数字 (magic number)

00:00:42.640 --> 00:00:46.564
它意味着一个代码中的一个没有任何解释的值

00:00:46.564 --> 00:00:52.530
我们最好能通过命名变量的方法来避免使用魔术数字

00:00:52.530 --> 00:00:55.770
这样所有的值就能更加容易的

00:00:55.770 --> 00:00:59.275
被代码的阅读者理解并且根据需要修改

00:00:59.274 --> 00:01:00.869
为了移除这些魔术数字

00:01:00.869 --> 00:01:04.829
我在 continue_crawl 添加了一个新的参数

00:01:04.829 --> 00:01:06.640
它表示最大允许的步长

00:01:06.640 --> 00:01:08.969
我把它写作 max_steps

00:01:08.969 --> 00:01:12.230
我想让现在的函数和之前具有相同的功能

00:01:12.230 --> 00:01:15.420
所以 我赋予 max_steps 默认值 25

00:01:15.420 --> 00:01:20.579
然后我再把函数体中的 25 替换成 max_steps

00:01:20.579 --> 00:01:24.734
现在 当 Philip 想要调用函数时 如果他想要设置不同的数字 

00:01:24.734 --> 00:01:25.799
他将很容易的做到

00:01:25.799 --> 00:01:28.418
但是 if 只使用了 2 个参数

00:01:28.418 --> 00:01:31.000
25 将会作为默认的参数值而存在

